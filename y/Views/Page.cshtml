@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Page>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using y.Services;
@using Newtonsoft.Json;
@using y.Models;
@using Microsoft.Extensions.Configuration;
@using Microsoft.Extensions.DependencyInjection;
@using Microsoft.Extensions.Logging; 
@using Microsoft.AspNetCore.Mvc; 
@using System.Threading.Tasks; 
@using Umbraco.Cms.Core.Models.Membership;
@using Microsoft.AspNetCore.Http;
@using Umbraco.Cms.Core.Security;
@inject IMemberManager _memberManager;
@{
    Layout = null; 
	var user = await _memberManager.GetCurrentMemberAsync();
	bool logged = !string.IsNullOrEmpty(user?.UserName);
}  
<!DOCTYPE HTML>
<html>
<head>
	<title>News</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="assets/css/main.css" /> 
</head>
<body class="is-preload"> 
	<div id="content">
		<div class="inner">
			@await Html.PartialAsync("Articles.cshtml") 
		</div>
	</div> 
	<!-- Sidebar -->
	<div id="sidebar">
		@if (logged)
		{
			<h1>Signed in as @user.Name</h1>
			@await Html.PartialAsync("partials/loginStatusu")

		}
		else
		{
			<h1>Not signed in</h1><a href="/login">Sign in</a>
		}
		@await Html.GetBlockGridHtmlAsync(Model, "side") 
		<!-- Copyright -->
		<ul id="copyright">
			<li>&copy; Untitled.</li>
			<li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
		</ul> 
	</div>

	<!-- Scripts -->
	<script src="assets/js/jquery.min.js"></script>
	<script src="assets/js/browser.min.js"></script>
	<script src="assets/js/breakpoints.min.js"></script>
	<script src="assets/js/util.js"></script>
	<script src="assets/js/main.js"></script>

</body>
</html>